version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: taippa
      POSTGRES_USER: taippa
      POSTGRES_PASSWORD: taippa
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "taippa"]
      interval: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://taippa:taippa@db:5432/taippa
      # Secret key used for password hashing and other cryptographic functions.
      # Change this to a long random string in production.
      SECRET_KEY: supersecretkey
      # Secret key used for signing JWT access tokens.  Change this to
      # another long random string in production.  Do not share between
      # environments.
      JWT_SECRET_KEY: superjwtsecret
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      # Stripe configuration for payment processing.  Replace these with your
      # actual API keys and webhook secret.  The success domain should match
      # the URL where the frontend is hosted (e.g. https://app.taippa.com).
      STRIPE_SECRET_KEY: "sk_test_000000000000000000000000"
      STRIPE_WEBHOOK_SECRET: "whsec_000000000000000000000000000000"
      STRIPE_SUCCESS_DOMAIN: "http://localhost"
      # Default tenant configuration.  When new leads are created or
      # users register without specifying a tenant, this tenant ID will be
      # used.  Replace with your actual tenant ID after seeding the
      # database (see populate_influencers script).
      DEFAULT_TENANT_ID: ""
    ports:
      - "8000:8000"
    # Run the API using Uvicorn.  The log level can be overridden by
    # setting the LOG_LEVEL environment variable (default: info).
    command: ["sh", "-c", "uvicorn taippa.main:app --host 0.0.0.0 --port 8000 --log-level ${LOG_LEVEL:-info}"]

  frontend:
    image: nginx:alpine
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db_data: